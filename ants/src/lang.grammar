type command =
	| Move		moveerror <command*;> enderror
	| Turn		turn <direction>
	| Pickup	pickup <command*;> endpickup
	| Drop		drop
	| Mark 		mark <int>
	| Unmark	unmark <int>
	| If 			if <tests> then <command*;> else <command*;> endif
	| While 	while <tests> : <command*;> endwhile
	| For     repeat <int> times : <command*;> endrepeat
	| Def     def <int> : <command*;> enddef
	| Call    call <int> endcall
	| Comment /* <chr*.> */
	| Flip 		aleat <int> ifyes <command*;> ifno <command*;> endaleat

type direction =
	| Left		left
	| Right		right

type program =
	| Program 		<command+$>

type availabledir =
	| Ahead 			ahead
	| Here 				here
	| LeftAhead 	aleft
	| RightAhead 	aright

type tests =
	|	Rock 			rock <availabledir>
	| Marker 		marker <availabledir> <int>
	| FoeMarker foemarker <availabledir>
	| Friend 		friend <availabledir>
	| Foe 			foe <availabledir>
	| Friendwf 	friendwf <availabledir>
	| Foewf 		foewf <availabledir>
	| Food 			food <availabledir>
	| Home 			home <availabledir>
	| FoeHome 	foehome <availabledir>
	| True 			true
	| False 		false
	| And 			(<tests> and <tests>)
	| Or 				[<tests> or <tests>]
	| Not 			not <tests>
	| Equal 		{<tests> == <tests>}


type chr =
	| A a
	| B b
	| C c
	| D d
	| E e
	| F f
	| G g
	| H h
	| I i
	| J j
	| K k
	| L l
	| M m
	| N n
	| O o
	| P p
	| Q q
	| R r
	| S s
	| T t
	| U u
	| V v
	| W w
	| X x
	| Y y
	| Z z
